    # Save batch-specific sale rates to SaleRateMaster
    rate_A = form.cleaned_data.get('rate_A')
    rate_B = form.cleaned_data.get('rate_B')
    rate_C = form.cleaned_data.get('rate_C')
    
    # Check if any of the rates were specified
    if rate_A is not None or rate_B is not None or rate_C is not None:
        # Check if a rate entry already exists for this product batch
        try:
            batch_rate = SaleRateMaster.objects.get(
                productid=product,
                product_batch_no=purchase.product_batch_no
            )
            # Update existing entry
            if rate_A is not None:
                batch_rate.rate_A = rate_A
            if rate_B is not None:
                batch_rate.rate_B = rate_B
            if rate_C is not None:
                batch_rate.rate_C = rate_C
            batch_rate.save()
        except SaleRateMaster.DoesNotExist:
            # Create new entry with default values if not specified
            SaleRateMaster.objects.create(
                productid=product,
                product_batch_no=purchase.product_batch_no,
                rate_A=rate_A if rate_A is not None else 0.0,
                rate_B=rate_B if rate_B is not None else 0.0,
                rate_C=rate_C if rate_C is not None else 0.0
            )