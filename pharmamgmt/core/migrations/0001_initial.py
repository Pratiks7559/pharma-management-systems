# Generated by Django 5.2 on 2025-04-30 05:46

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerMaster',
            fields=[
                ('customerid', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('customer_name', models.CharField(default='NA', max_length=200)),
                ('customer_type', models.CharField(blank=True, default='TYPE-A', max_length=200)),
                ('customer_address', models.CharField(blank=True, default='NA', max_length=200)),
                ('customer_mobile', models.CharField(blank=True, default='NA', max_length=15)),
                ('customer_whatsapp', models.CharField(blank=True, default='NA', max_length=15)),
                ('customer_emailid', models.CharField(blank=True, default='NA', max_length=60)),
                ('customer_spoc', models.CharField(blank=True, default='NA', max_length=100)),
                ('customer_dlno', models.CharField(blank=True, default='NA', max_length=30)),
                ('customer_gstno', models.CharField(blank=True, default='NA', max_length=20)),
                ('customer_bank', models.CharField(blank=True, default='NA', max_length=200)),
                ('customer_bankaccountno', models.CharField(blank=True, default='NA', max_length=30)),
                ('customer_bankifsc', models.CharField(blank=True, default='NA', max_length=20)),
                ('customer_upi', models.CharField(blank=True, max_length=50)),
                ('customer_credit_days', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceMaster',
            fields=[
                ('invoiceid', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('invoice_no', models.CharField(max_length=20)),
                ('invoice_date', models.DateField(default=datetime.datetime.now)),
                ('transport_charges', models.FloatField()),
                ('invoice_total', models.FloatField()),
                ('invoice_paid', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pharmaname', models.CharField(max_length=300)),
                ('pharmaweburl', models.CharField(max_length=150)),
                ('proprietorname', models.CharField(max_length=100)),
                ('proprietorcontact', models.CharField(max_length=12)),
                ('proprietoremail', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('productid', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=200)),
                ('product_company', models.CharField(max_length=200)),
                ('product_packing', models.CharField(max_length=20)),
                ('product_image', models.ImageField(default='images/medicine_default.png', null=True, upload_to='images/')),
                ('product_salt', models.CharField(default=None, max_length=300)),
                ('product_category', models.CharField(default=None, max_length=30)),
                ('product_hsn', models.CharField(default=None, max_length=20)),
                ('product_hsn_percent', models.CharField(default=None, max_length=20)),
                ('rate_A', models.FloatField(default=0.0)),
                ('rate_B', models.FloatField(default=0.0)),
                ('rate_C', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='ReturnInvoiceMaster',
            fields=[
                ('returninvoiceid', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('returninvoice_date', models.DateField(default=datetime.datetime.now)),
                ('return_charges', models.FloatField(default=0)),
                ('returninvoice_total', models.FloatField()),
                ('returninvoice_paid', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierMaster',
            fields=[
                ('supplierid', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(max_length=200)),
                ('supplier_type', models.CharField(max_length=200)),
                ('supplier_address', models.CharField(max_length=200)),
                ('supplier_mobile', models.CharField(max_length=15)),
                ('supplier_whatsapp', models.CharField(max_length=15)),
                ('supplier_emailid', models.CharField(max_length=60)),
                ('supplier_spoc', models.CharField(max_length=100)),
                ('supplier_dlno', models.CharField(max_length=30)),
                ('supplier_gstno', models.CharField(max_length=20)),
                ('supplier_bank', models.CharField(max_length=200)),
                ('supplier_bankaccountno', models.CharField(max_length=30)),
                ('supplier_bankifsc', models.CharField(max_length=20)),
                ('supplier_upi', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Web_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('user_type', models.CharField(max_length=50)),
                ('user_contact', models.CharField(max_length=100)),
                ('path', models.ImageField(default='images/default.png', upload_to='images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InvoicePaid',
            fields=[
                ('payment_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('payment_date', models.DateField(default=datetime.datetime.now)),
                ('payment_amount', models.FloatField()),
                ('payment_mode', models.CharField(max_length=30, null=True)),
                ('payment_ref_no', models.CharField(max_length=30, null=True)),
                ('ip_invoiceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.invoicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ProductRateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_A', models.FloatField(default=0.0)),
                ('rate_B', models.FloatField(default=0.0)),
                ('rate_C', models.FloatField(default=0.0)),
                ('rate_date', models.DateField(default=datetime.datetime.now)),
                ('rate_productid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseReturnInvoicePaid',
            fields=[
                ('pr_payment_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('pr_payment_date', models.DateField(default=datetime.datetime.now)),
                ('pr_payment_amount', models.FloatField()),
                ('pr_payment_mode', models.CharField(max_length=30, null=True)),
                ('pr_payment_ref_no', models.CharField(max_length=30, null=True)),
                ('pr_ip_returninvoiceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.returninvoicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnSalesInvoiceMaster',
            fields=[
                ('return_sales_invoice_no', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('return_sales_invoice_date', models.DateField()),
                ('return_sales_charges', models.FloatField(default=0)),
                ('return_sales_invoice_total', models.FloatField()),
                ('return_sales_invoice_paid', models.FloatField(default=0)),
                ('return_sales_customerid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customermaster')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnSalesInvoicePaid',
            fields=[
                ('return_sales_payment_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('return_sales_payment_date', models.DateTimeField(default=datetime.datetime.now)),
                ('return_sales_payment_amount', models.FloatField()),
                ('return_sales_payment_mode', models.CharField(default='NA', max_length=30)),
                ('return_sales_payment_ref_no', models.CharField(default='NA', max_length=30)),
                ('return_sales_ip_invoice_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.returnsalesinvoicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnSalesMaster',
            fields=[
                ('return_sales_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('return_product_name', models.CharField(default='NA', max_length=200)),
                ('return_product_company', models.CharField(blank=True, default='NA', max_length=200)),
                ('return_product_packing', models.CharField(blank=True, default='NA', max_length=20)),
                ('return_product_batch_no', models.CharField(max_length=20)),
                ('return_product_expiry', models.DateField(default=datetime.datetime.now)),
                ('return_product_MRP', models.FloatField(default=0.0)),
                ('return_sale_rate', models.FloatField(default=0.0)),
                ('return_sale_quantity', models.FloatField(default=0.0)),
                ('return_sale_scheme', models.FloatField(default=0.0)),
                ('return_sale_discount', models.FloatField(default=0.0)),
                ('return_sale_igst', models.FloatField(default=0.0)),
                ('return_sale_total_amount', models.FloatField(default=0.0)),
                ('return_sale_entry_date', models.DateTimeField(default=datetime.datetime.now)),
                ('return_customerid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customermaster')),
                ('return_productid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productmaster')),
                ('return_sales_invoice_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.returnsalesinvoicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='SalesInvoiceMaster',
            fields=[
                ('sales_invoice_no', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('sales_invoice_date', models.DateField()),
                ('sales_transport_charges', models.FloatField()),
                ('sales_invoice_total', models.FloatField()),
                ('sales_invoice_paid', models.FloatField(default=0)),
                ('customerid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customermaster')),
            ],
        ),
        migrations.CreateModel(
            name='SalesInvoicePaid',
            fields=[
                ('sales_payment_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('sales_payment_date', models.DateTimeField(default=datetime.datetime.now)),
                ('sales_payment_amount', models.FloatField()),
                ('sales_payment_mode', models.CharField(default='NA', max_length=30)),
                ('sales_payment_ref_no', models.CharField(default='NA', max_length=30)),
                ('sales_ip_invoice_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.salesinvoicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='SalesMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='NA', max_length=200)),
                ('product_company', models.CharField(blank=True, default='NA', max_length=200)),
                ('product_packing', models.CharField(blank=True, default='NA', max_length=20)),
                ('product_batch_no', models.CharField(max_length=20)),
                ('product_expiry', models.DateField(default=datetime.datetime.now)),
                ('product_MRP', models.FloatField(default=0.0)),
                ('sale_rate', models.FloatField(default=0.0)),
                ('sale_quantity', models.FloatField(default=0.0)),
                ('sale_scheme', models.FloatField(default=0.0)),
                ('sale_discount', models.FloatField(default=0.0)),
                ('sale_igst', models.FloatField(default=0.0)),
                ('sale_total_amount', models.FloatField(default=0.0)),
                ('sale_entry_date', models.DateTimeField(default=datetime.datetime.now)),
                ('rate_applied', models.CharField(blank=True, default='NA', max_length=10)),
                ('sale_calculation_mode', models.CharField(default='flat', max_length=5)),
                ('customerid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customermaster')),
                ('productid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productmaster')),
                ('sales_invoice_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.salesinvoicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnPurchaseMaster',
            fields=[
                ('returnpurchaseid', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('returnproduct_batch_no', models.CharField(max_length=20)),
                ('returnproduct_expiry', models.DateField(default=datetime.datetime.now)),
                ('returnproduct_MRP', models.FloatField(default=0.0)),
                ('returnproduct_purchase_rate', models.FloatField()),
                ('returnproduct_quantity', models.FloatField()),
                ('returnproduct_scheme', models.FloatField(default=0.0)),
                ('returnproduct_charges', models.FloatField()),
                ('returntotal_amount', models.FloatField(default=0.0)),
                ('returnpurchase_entry_date', models.DateField(default=datetime.datetime.now)),
                ('returninvoiceid', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.returninvoicemaster')),
                ('returnproductid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productmaster')),
                ('returnproduct_supplierid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.suppliermaster')),
            ],
        ),
        migrations.AddField(
            model_name='returninvoicemaster',
            name='returnsupplierid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.suppliermaster'),
        ),
        migrations.CreateModel(
            name='PurchaseMaster',
            fields=[
                ('purchaseid', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('product_invoice_no', models.CharField(max_length=20)),
                ('product_name', models.CharField(max_length=200)),
                ('product_company', models.CharField(max_length=200)),
                ('product_packing', models.CharField(max_length=20)),
                ('product_batch_no', models.CharField(max_length=20)),
                ('product_expiry', models.DateField(default=datetime.datetime.now)),
                ('product_MRP', models.FloatField()),
                ('product_purchase_rate', models.FloatField()),
                ('product_quantity', models.FloatField()),
                ('product_scheme', models.FloatField(default=0.0)),
                ('product_discount_got', models.FloatField()),
                ('product_transportation_charges', models.FloatField()),
                ('actual_rate_per_qty', models.FloatField(default=0.0)),
                ('product_actual_rate', models.FloatField(default=0.0)),
                ('total_amount', models.FloatField(default=0.0)),
                ('purchase_entry_date', models.DateTimeField(default=datetime.datetime.now)),
                ('IGST', models.FloatField(default=0.0)),
                ('purchase_calculation_mode', models.CharField(default='flat', max_length=5)),
                ('product_invoiceid', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.invoicemaster')),
                ('productid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productmaster')),
                ('product_supplierid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.suppliermaster')),
            ],
        ),
        migrations.AddField(
            model_name='invoicemaster',
            name='supplierid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.suppliermaster'),
        ),
        migrations.AddConstraint(
            model_name='invoicemaster',
            constraint=models.UniqueConstraint(fields=('invoice_no', 'supplierid'), name='unique_invoiceno_supplierid'),
        ),
    ]
